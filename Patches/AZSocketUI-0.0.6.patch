--- AZSocketIO/AZSocketIO/AZSocketIO.h	2014-08-27 08:58:55.000000000 +0200
+++ ./applogger-ios-sdk/Example/Pods/AZSocketIO/AZSocketIO/AZSocketIO.h	2014-08-27 07:29:03.000000000 +0200
@@ -137,6 +137,16 @@
  @param failure A block object that will be executed when an error is reported by the socket.io server or the connection becomes unusable.
  */
 - (void)connectWithSuccess:(void (^)())success andFailure:(void (^)(NSError *error))failure;
+
+/**
+ Connects to the socket.io server.
+ 
+ @param success A block object that will be executed after the completion of handshake.
+ @param failure A block object that will be executed when an error is reported by the socket.io server or the connection becomes unusable.
+ @param data A dictionary with additional data for the handshake
+ */
+- (void)connectWithSuccess:(ConnectedBlock)success andFailure:(ErrorBlock)failure withData:(NSDictionary*)data;
+
 /**
  Disconnects from the socket.io server
  */
--- AZSocketIO/AZSocketIO/AZSocketIO.m	2014-08-27 08:58:55.000000000 +0200
+++ ./applogger-ios-sdk/Example/Pods/AZSocketIO/AZSocketIO/AZSocketIO.m	2014-08-27 07:27:11.000000000 +0200
@@ -122,10 +122,32 @@
 #pragma mark connection management
 - (void)connectWithSuccess:(ConnectedBlock)success andFailure:(ErrorBlock)failure
 {
+    [self connectWithSuccess:success andFailure:failure withData:nil];
+}
+
+- (void)connectWithSuccess:(ConnectedBlock)success andFailure:(ErrorBlock)failure withData:(NSDictionary*)data
+{
     self.state = AZSocketIOStateConnecting;
     self.connectionBlock = success;
     self.errorBlock = failure;
-    NSString *urlString = [NSString stringWithFormat:@"socket.io/%@", PROTOCOL_VERSION];
+    
+    // generate the query string
+    NSMutableString *query = [[NSMutableString alloc] initWithString:@""];
+    
+    if ( data != nil ) {
+        [data enumerateKeysAndObjectsUsingBlock: ^(id key, id value, BOOL *stop) {
+            
+            if (query.length == 0)
+                [query appendFormat:@"?%@=%@", key, value];
+            else
+                [query appendFormat:@"&%@=%@", key, value];
+        }];
+    }
+
+    // generate the url string
+    NSString *urlString = [NSString stringWithFormat:@"socket.io/%@%@", PROTOCOL_VERSION, query];
+    
+    // perform the handshake
     [self.httpClient GET:urlString
                   parameters:nil
                      success:^(AFHTTPRequestOperation *operation, id responseObject) {
